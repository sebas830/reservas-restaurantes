services:
  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "5000:5000"
    environment:
      - API_GATEWAY_URL=http://api-gateway:8000
    depends_on:
      - api-gateway

  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "8000:8000"
    depends_on:
      - auth-service

  # Microservicio de Autenticación
  auth-service:
    build: ./services/authentication
    container_name: auth-service
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=mongodb://auth-db:27017/auth_db
    depends_on:
      - auth-db

  # Base de datos para el servicio de autenticación
  auth-db:
    image: mongo:latest
    container_name: auth-db
    ports:
      - "27017:27017"
    volumes:
      - auth_data:/data/db

  # Base de datos PostgreSQL para reservas
  postgres:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password123
      POSTGRES_DB: reservas_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Servicio de Reservas
  reservas-service:
    build: ./services/reservas
    container_name: reservas-service
    ports:
      - "8002:8002"
    environment:
      - DATABASE_URL=postgresql://admin:password123@postgres:5432/reservas_db
    depends_on:
      - postgres

volumes:
  auth_data:
  postgres_data:
